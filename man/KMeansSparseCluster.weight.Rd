% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/KMeansSparseCluster_weight.R
\name{KMeansSparseCluster.weight}
\alias{KMeansSparseCluster.weight}
\title{Sparse Weighted K-Means Clustering with Weights on Observations}
\usage{
KMeansSparseCluster.weight(x, K = NULL, weight = NULL,
  wbounds = NULL, nstart = 20, silent = TRUE, maxiter = 6,
  centers = NULL)
}
\arguments{
\item{x}{An \emph{n} by \emph{p} numeric data matrix, and \emph{n} is the number of observations and \emph{p} the number of features.}

\item{K}{The number of clusters. Omitted if \code{centers} are provided.}

\item{weight}{A vector of \emph{n} positive elements representing weights on observations.}

\item{wbounds}{A single L1 bound on w (the feature weights), or a vector of L1 bounds on w. If wbound is small,
    then few features will have non-zero weights. If wbound is large then all
  features will have non-zero weights. Should be greater than 1.}

\item{nstart}{The number of initial random sets chosen from (distinct) rows in \code{x}. Omitted if \code{centers} is provided. Default is 20.}

\item{silent}{Print out progress?}

\item{maxiter}{The maximum number of iterations.}

\item{centers}{A \emph{K} by \emph{p} matrix indicating initial (distinct) cluster centers.}
}
\value{
If \code{wbounds} is a numeric value, then the function returns a list
 with elements as follows:
 \item{ws}{The p-vector of feature weights.}
 \item{Cs}{The clustering result.}
 \item{wcss}{A list of the following:
 \code{wcss.perfeature}, \code{wcss.ws}, \code{bcss.perfeature}, \code{bcss.ws}.
 Among them, \code{wcss.ws}=\code{sum(wcss.perfeature*ws)},
 \code{bcss.ws}=\code{sum(bcss.perfeature*ws)}. And \code{bcss.ws} is the objective in
 sparse weighted K-Means clustering algorithm.}
 \item{wbound}{The L1 bound in the current list.}
 \item{weight}{The weights on observations.}
 If \code{wbounds} is a vector, then the function returns a list with lists
 (one per element of \code{wbounds}).
}
\description{
Perform sparse weighted K-Means algorithm on observations with given weights.
}
\examples{
# generate data
set.seed(1)
require(mvtnorm)
n <- 60  #sample size
p <- 1000 #dimension of features
q <- 50  #dimension of cluster-specific features
mu <- 0.8
MU <- c(0,-mu,mu)
sigma0 <- 5
data <- rbind(rmvnorm(n/3,rep(0,p)),rmvnorm(n/3,c(rep(-mu,q),rep(0,p-q))),
rmvnorm(n/3,c(rep(mu,q),rep(0,p-q))))
# add noise to 10 random observations
noisy.lab <- sample(n,10)
for (k in 1:3){
check <- (noisy.lab<n*k/3+1) & (noisy.lab>n/3*(k-1))
temp.lab <- noisy.lab[check]
num <- length(temp.lab)
if(any(check))
  data[temp.lab,] <- rmvnorm(num,c(rep(MU[k],q),rep(0,p-q)),sigma = diag(sigma0,p))
}
# run kmeans.weight.tune to tune weight parameter U
res.tuneU <- kmeans.weight.tune(data,K=3,noisy.lab=noisy.lab)
plot(res.tuneU)
weight <- res.tuneU$bestweight
# run KMeansSparseCluster.weight.permute to tune sparsity parameter s
res.tunes <- KMeansSparseCluster.permute.weight(data,K=3,weight=weight)
res <- KMeansSparseCluster.weight(data,K=3,weight=weight,wbounds=res.tunes$bestw)
}
\seealso{
Other sparse weighted K-Means functions: \code{\link{KMeansSparseCluster.permute.weight}},
  \code{\link{kmeans.weight.tune}},
  \code{\link{kmeans.weight}}
}
\author{
Wenyu Zhang
}
\concept{sparse weighted K-Means functions}
\keyword{Clustering}
\keyword{K-Means}
\keyword{Sparse}
\keyword{Weighted}
