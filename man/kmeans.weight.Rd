% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kmeans_weight.R
\name{kmeans.weight}
\alias{kmeans.weight}
\title{Weighted K-Means Clustering with Weights on Observations}
\usage{
kmeans.weight(x, K = NULL, weight = NULL, centers = NULL,
  nstart = 20, algorithm = "Hartigan-Wong")
}
\arguments{
\item{x}{An \emph{n} by \emph{p} numeric data matrix, and \emph{n} is the number of observations and \emph{p} the number of features.}

\item{K}{The number of clusters. Omitted if \code{centers} are provided.}

\item{weight}{A vector of \emph{n} positive elements representing weights on observations.}

\item{centers}{A \emph{K} by \emph{p} matrix indicating initial (distinct) cluster centers.}

\item{nstart}{The number of initial random sets chosen from (distinct) rows in \code{x}. Omitted if \code{centers} is provided. Default is 20.}

\item{algorithm}{Character; either "\code{Hartigan-Wong}" or "\code{Forgy}". Default is "\code{Hartigan-Wong}".}
}
\value{
The function returns a list of the following components:
\item{centers}{the centers of the clustering result.}
\item{cluster}{a vector of integers (from \code{1:k}) indicating the cluster to which each observation is allocated.}
\item{weight}{a vector of non-zero weights in the input vector \code{weight}.}
\item{wcss}{normalized within-cluster sum of squares, i.e. the objective divided by \code{sum(weight)}.}
}
\description{
Perform K-Means algorithm on observations with given weights.
}
\examples{
\dontrun{
set.seed(1)
data("DMdata")
# data preprocessing
data <- t(DMdata$data)
data_rank <- apply(data, 2, rank) 
data_rank_center<- t(t(data_rank) - colMeans(data_rank)) 
data_rank_center_scale <- t(t(data_rank_center)/apply(data_rank_center, 2, sd)) 
data_processed <-  t(data_rank_center_scale) 
# tune the number of cluster K
# nperms and nstart are set to be small in order to save computation time
cK <- ChooseK(data_processed[-DMdata$noisy.label,],nClusters = 1:6,nperms = 10,nstart = 5)
plot(cK)
K <- cK$OptimalK
# tune weight
  res.tuneU <- kmeans.weight.tune(x = data_processed,K = K,
  noisy.lab = DMdata$noisy.label,nperms = 10,nstart = 5)
plot(res.tuneU)
# perform weighted K-means
res <- kmeans.weight(x = data_processed,K = K,weight = res.tuneU$bestweight)
# check the result
table(res$cluster,DMdata$true.label)
}
}
\seealso{
Other sparse weighted K-Means functions: \code{\link{ChooseK}},
  \code{\link{KMeansSparseCluster.permute.weight}},
  \code{\link{KMeansSparseCluster.weight}},
  \code{\link{kmeans.weight.tune}}
}
\author{
Wenyu Zhang
}
\concept{sparse weighted K-Means functions}
\keyword{Clustering}
\keyword{K-Means}
\keyword{Weighted}
